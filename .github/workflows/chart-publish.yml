name: Publish Helm Chart

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Log in to GHCR
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Determine chart tag
        id: vars
        run: |
          # Use the chart's own version from Chart.yaml
          CHART_FILE="chart/proxmox-name-sync-controller/Chart.yaml"
          CHART_VERSION=$(grep '^version:' "$CHART_FILE" | awk '{print $2}')
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          
          echo "chart_version=${CHART_VERSION}" >> "$GITHUB_OUTPUT"
          echo "release_tag=${RELEASE_TAG}" >> "$GITHUB_OUTPUT"
          echo "Publishing chart version: $CHART_VERSION for release: $RELEASE_TAG"
          echo "Note: Chart versions are validated on PRs to prevent overwrites"

      - name: Get chart name and dir
        id: chart
        run: |
          CHART_DIR="chart/proxmox-name-sync-controller"
          CHART_NAME=$(grep '^name:' "$CHART_DIR/Chart.yaml" | awk '{print $2}')
          echo "dir=${CHART_DIR}" >> "$GITHUB_OUTPUT"
          echo "name=${CHART_NAME}" >> "$GITHUB_OUTPUT"

      - name: Package chart
        run: |
          mkdir -p dist
          helm dependency build "${{ steps.chart.outputs.dir }}" || true
          helm package "${{ steps.chart.outputs.dir }}" \
            --version "${{ steps.vars.outputs.chart_version }}" \
            --app-version "${{ steps.vars.outputs.release_tag }}" \
            --destination dist

      - name: Push chart to GHCR
        run: |
          USERNAME=$(echo "${{ github.repository }}" | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
          helm push "dist/${{ steps.chart.outputs.name }}-${{ steps.vars.outputs.chart_version }}.tgz" "oci://ghcr.io/${USERNAME}/charts"
