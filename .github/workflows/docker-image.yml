name: Docker Image

on:
  push:
    branches:
      - '**'
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute image name and tags
        id: meta
        run: |
          REPO="${GITHUB_REPOSITORY}"
          IMAGE="ghcr.io/${REPO,,}"
          SHORT_SHA="${GITHUB_SHA::5}"
          
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"
          echo "short_sha=${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          
          # Determine tags based on event type
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # For releases, use the release tag
            RELEASE_TAG="${{ github.event.release.tag_name }}"
            echo "tags=${IMAGE}:${RELEASE_TAG}" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref_name }}" == "${{ github.event.repository.default_branch }}" ]]; then
            # For main branch pushes, use first 5 chars of commit SHA
            echo "tags=${IMAGE}:${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          else
            # For other branches, use short SHA
            echo "tags=${IMAGE}:${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


